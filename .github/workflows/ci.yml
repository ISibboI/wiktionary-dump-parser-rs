name: CI

on:
  pull_request:
  push:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  precheck:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command:  check
          args: --all --bins --examples --lib

  check_msrv:
    needs: [precheck]
    name: Check MSRV with all features
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Install MSRV toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --all --bins --examples --tests --lib

  check_platform_compatibility:
    needs: [precheck]
    name: Check platform compatibility
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command:  check
          args: --all-features --all --bins --examples --tests --lib

  detailed_tests:
    needs: [precheck]
    name: Check, test, doc, format and lint with all features
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command:  check
          args: --all-features --all --bins --examples --tests --lib

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --all

      - name: Docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --bins --examples --tests --lib